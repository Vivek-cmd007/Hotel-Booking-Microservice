package com.bookingservice.service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bookingservice.entity.BookingDetails;
import com.bookingservice.exception.ResourceNotFoundException;
import com.bookingservice.model.BookingPayload;
import com.bookingservice.model.Hotel;
import com.bookingservice.model.RoomDetails;
import com.bookingservice.model.User;
import com.bookingservice.repository.BookingDetailsRepository;

@Service
public class BookingDetailsServiceImpl implements BookingDetailsService{

	@Autowired
	private BookingDetailsRepository bookingrepository ;
	
	@Autowired
	private HotelService hotelService;
	
	@Autowired
	private UserService userService;
	
	
	
	@Override
	public BookingDetails createBookingDetails(BookingDetails booking) {
		
		RoomDetails room = hotelService.getRoomById(booking.getRoomId());
		
		room.setAvailable(false);
		hotelService.updateRoom(room);
		
		return bookingrepository.save(booking);
	}
	
	@Override
	public BookingPayload getBookingDetailsById(int bookingId) {
		Optional<BookingDetails> optionalBooking = bookingrepository.findById(bookingId);
		
		if(optionalBooking.isEmpty()) {
			throw new ResourceNotFoundException("Booking Not Found"+bookingId);
			
		}
		BookingDetails booking = optionalBooking.get();
		
		User user = userService.getUserDetailsById(booking.getUserId());
		RoomDetails room =hotelService.getRoomById(booking.getRoomId());
		Hotel hotel = hotelService.getHotelDetailsById(booking.getHotelId());
		
		BookingPayload payload = new BookingPayload();
		
		payload.setCustomer(user.getUserName());
		payload.setHotelName(hotel.getHotelName());
		payload.setRoomNo(room.getRoomNo());
		payload.setRoomType(room.getRoomType());		
		payload.setMobile(user.getMobile());
		payload.setHotelPhone1(hotel.getHotelPhone1());
		payload.setAmount(booking.getAmount());
		
		
		return payload;		
		
	}	

	@Override
	public List<BookingDetails> getAllBookingDetails() {
		return bookingrepository.findAll();
		
	}

	@Override
	public void deleteBookingDetails(int booingId) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public BookingDetails updateBookingDetails(BookingDetails bookingDetails) {
		
		return null;
	}





		
//		BookingDetails booking =new BookingDetails();
//		
//		booking.setAmount(bookingPayload.getAmount());
//		booking.setHotelId(bookingPayload.getHotelId());
//		booking.setUserId(bookingPayload.getUserId());
//		booking.setBookedFrom(LocalDate.now());
//		booking.setBookedTo(bookingPayload.getBookedTo());
//		booking.setRoomId(bookingPayload.getRoomId());
//		
//		return bookingrepository.save(booking);
//	}

	

	
}
